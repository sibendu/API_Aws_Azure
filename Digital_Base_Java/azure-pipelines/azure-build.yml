parameters:
  vmImage: ubuntu-18.04
  pythonVersion: '3.8'
  azureArtifactName: BuildOutput

jobs:
  - job: Build
    pool:
      vmImage: ${{parameters.vmImage}}
    steps:
      - task: UsePythonVersion@0
        displayName: Install Python
        inputs:
          versionSpec: ${{parameters.pythonVersion}}

      - bash: chmod 777 build.sh
        displayName: Execute build script
        
      - bash: ./build.sh
        displayName: Execute build script

      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'build'

      - task: Gradle@2
        displayName: Build 
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx5122m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'test'

      # Publish Test Results
      # Publish test results to Azure Pipelines
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
          testResultsFiles: '**/TEST-*.xml' 
          #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
          mergeTestResults: true # Optional
          #failTaskOnFailedTests: false # Optional
          testRunTitle: $(Build.SourceVersion) # Optional
          #buildPlatform: # Optional
          #buildConfiguration: # Optional
          #publishRunAttachments: true # Optional
    
    
      - publish: $(System.DefaultWorkingDirectory)
        artifact: ${{parameters.azureArtifactName}}
        displayName: Publish build artifact
