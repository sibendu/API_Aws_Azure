# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'

- task: S3Upload@1
  inputs:
    awsCredentials: 'aws_sandbox'  
    regionName: 'eu-west-1'
    bucketName: 'onestore-services-azure-artifacts'
    sourceFolder: './build/libs'
    targetFolder: 'OrderService-$(Build.SourceVersion)'
    globExpressions: '*.jar'
    createBucket: false  
    
    
- task: CloudFormationCreateOrUpdateStack@1
  inputs:
    awsCredentials: 'aws_sandbox'
    regionName: 'eu-west-1'
    stackName: 'OrderService'
    templateParametersSource: inline
    templateParameters: '[{"ParameterKey": "LambdaSourceBucketPrefix","ParameterValue": "OrderService-$(Build.SourceVersion)/"}]'
    templateFile: cft-orderservice.yml
    capabilityIAM: 'true' 
    capabilityNamedIAM: 'true'        